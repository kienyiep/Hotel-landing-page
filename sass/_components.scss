/////////////////////////////////
// LOGO

.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

/////////////////////////////////
// SEARCH

.search {
  // background-color: orangered;
  flex: 0 0 40%; // occupy 40% of the container
  display: flex;
  // nested flexbox
  //flex item become flex container
  align-items: center;
  justify-content: center;
  @media only screen and (max-width: $bp-smallest) {
    order: 1;
    flex: 0 0 100%;
    background-color: var(--color-grey-light-2);
  }

  &__input {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: 0.7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all 0.2s;
    margin-right: -3.25rem; // the button will move on top of the input
    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }
    // it will only workin webkit which are chrome and safari
    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }
  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }
}

/////////////////////////////////
// USER NAVIGATION

.user-nav {
  // background-color: greenyellow;
  align-self: stretch;
  display: flex;
  align-items: center;
  // select the direct children, which are the user_nav__
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    display: flex;
    align-items: center;
  }
  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 100%;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  // &__user {
  // }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }

  // &__user-name {
  // }
}
////////////////////////
// SIDE NAVIGATION
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: flex;
    margin: 0;
  }
  &__item {
    position: relative;
    &:not(:last-child) {
      margin-bottom: 0.5rem;
      @media only screen and (max-width: $bp-medium) {
        margin: 0;
      }
    }

    @media only screen and (max-width: $bp-medium) {
      flex: 1;
    }
  }

  &__item::before {
    content: ""; //need to specify content otherwise it will/wont show in browser
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    // the scale will occur in the Y direction. (the scale start from middle)
    // transform-origin: bottom; // the scale will start from bottom
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
      background-color 0.1s; // width happen in 0.4s and delay in 0.2s
  }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }
  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;
    z-index: 10; //z-index only work if we specify position
    position: relative;
    display: flex;
    align-items: center;

    @media only screen and (max-width: $bp-medium) {
      justify-content: center;
      padding: 2rem;
    }

    @media only screen and (max-width: $bp-small) {
      flex-direction: column;
      padding: 1.5rem 0.5rem;
    }
  }

  &__link:hover {
    // color: orangered;
  }

  &__icon {
    // color: blue;
    height: 1.75rem;
    width: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; // the color of the parent element

    @media only screen and (max-width: $bp-small) {
      margin-right: 0;
      margin-bottom: 0.7rem;
      width: 1.5rem;
      height: 1.5rem;
    }
  }
}

////////////////////////
// LEGAL TEXT
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: none;
  }
}

////////////////////////////
//gallery
.gallery {
  display: flex;
  &__photo {
    width: 100%;
    display: block;
  }
}

.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }
  }

  &__stars {
    // flex: 1; // will occupy whole soace
    margin-right: auto; // will only occupy the element self, hence when the user hover the element, only will hover the element itself, instead of entire black space.

    //as the svg element behave like inline element, like text that produce a small white space at the bottom of the element, we can remove that by set the line height and the font size to 0. But there is a simpler way which is to set the parent elemnt to flexbox
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: white;
    margin-left: 3rem;
    align-self: stretch; //
    padding: 0 2.25rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    @media only screen and (max-width: $bp-small) {
      padding: 0 1.5rem;
    }
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
    }
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;

    @media only screen and (max-width: $bp-small) {
      font-size: 0.5rem;
    }
  }
}

////////////////////////////
//BUTTON INLINE
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor;
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.2s;

  & span {
    margin-left: 3px;
    transition: margin-left 0.2s;
  }

  &:hover {
    color: var(--color-grey-dark-1);
    span {
      margin-left: 8px;
    }
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }
  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

////////////////////////////
//PARAGRAPH

.paragraph:not(:last-child) {
  margin-bottom: 2rem;
}

////////////////////////////
//LIST
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  flex-wrap: wrap;
  &__item {
    flex: 0 0 50%;
    margin-bottom: 0.7rem;
  }

  // before the item element, we create a small pseudo element
  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    background-color: var(--color-primary);
    -webkit-mask-image: url(../img/chevron-thin-right.svg); // put the mask on top of the position of the icon is
    -webkit-mask-size: cover; // the icon covers the entire element
    mask-image: url(../img/chevron-thin-right.svg); // put the mask on top of the position of the icon is
    mask-size: cover; // the icon covers the entire element
  }
}

////////////////////////////
//RECOMMEND

.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center;

  &__count {
    margin-right: auto;
  }

  &__friends {
    display: flex;
  }
  &__photo {
    // when the border added, the image is shrink, to fix it, use the box sizing
    // normally the padding and border will be added to the height and width of the element.
    // however, in this situation, we want the border to be added on top of the height and the width.
    // hence we can set it back to default.
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    &:not(:last-child) {
      margin-right: -2rem;
    }
  }
}

////////////////////////////
//REVIEWS

.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;
  position: relative;
  overflow: hidden;

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-bottom: 3rem;
  }
  &__text {
    margin-bottom: 2rem;
    z-index: 10; // z-index only work if you set the position
    position: relative;
  }
  &__user {
    display: flex;
    align-items: center;
  }
  &__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }
  &__user-box {
    margin-right: auto;
  }
  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 0.4rem;
  }
  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }
  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }

  &::before {
    content: "\201C";
    position: absolute;
    top: -2.75rem;
    left: -1rem;
    line-height: 1; // sets the height of a line box. It's commonly used to set the distance between lines of text.
    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    z-index: 1;
  }
}

////////////////////////////
//Call To Action
.cta {
  padding: 3.5rem 0;
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    padding: 2.5rem 0;
  }

  &__book-now {
    font-size: 2rem;
    font-weight: 300;
    text-transform: uppercase;
    margin-bottom: 2.5rem;
  }
}

.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 100px;
  border: none;
  position: relative;
  overflow: hidden; // as the invisible button is outside the btn, so it is an overflow element, so we hid the invisible btn by set the overflow to hidden.
  cursor: pointer;
  background-image: linear-gradient(
    to right,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  color: #fff;

  & > * {
    height: 100%;
    width: 100%;
    display: inline-block;
    transition: all 0.2s;
  }

  &__visible {
    padding: 2rem 7.5rem;
  }
  &__invisible {
    position: absolute;
    padding: 2rem 0;
    // has the height and width of the parent element
    left: 0;
    // top: -100%;
    transform: translateY(-100%);
  }

  &:hover {
    background-image: linear-gradient(
      to left,
      var(--color-primary-light),
      var(--color-primary-dark)
    );
  }

  &:hover &__visible {
    transform: translateY(100%);
  }
  &:hover &__invisible {
    // top: 0;
    transform: translateY(0%);
  }
  &:focus {
    animation: pulsate 1s infinite;
  }
}
